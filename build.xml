<project name="ledger" default="build" basedir=".">
  <description>
    General Ledger Build
  </description>
  <property name="template.dir" value="${basedir}/template/_templates_"/>
  <property name="templategen.dir" value="${basedir}/template/_gen_"/>
  <property name="build.dir" value ="${basedir}/build/app"/>
  <property name="deploy.dir" value="${basedir}/deploy"/>
  <property name="closure.dir" value="${basedir}/build"/>
  <property name="closure-library.dir" value="${closure.dir}/closure-library" />
  <property name="closurecompiler.dir" value="/home/wbmartin/dev/closurecompiler"/>
  <property name="soycompiler.dir" value="${closurecompiler.dir}"/>
  <target name="generateTemplates">
    <exec dir="${basedir}" executable="perl">
      <arg value="generateTemplates.pl"/>
      <arg value="${basedir}"/>
    </exec>
  </target>

  <target name="build-push">
    <copy file="${templategen.dir}/index.html" todir="${build.dir}"/>
    <copy file="${templategen.dir}/app.js" todir="${build.dir}"/>
    <copy file="${templategen.dir}/webpages.js" todir="${build.dir}"/>
    <copy file="${template.dir}/app/xlib/soyutils_usegoog.js" todir="${build.dir}"/>
    <copy file="${template.dir}/app/xlib/pagehelper.js" todir="${build.dir}"/>
  </target>

  <target name="build-soy">
    <fileset id="soy.dir" dir="${templategen.dir}" includes="*.soy"> 
    <size value="0"  when="more"/>
  </fileset>
    <pathconvert pathsep=" --srcs " property="soyfiles" refid="soy.dir"/>
    <echo message="${soyfiles}"/>
    <exec executable="java">
      <arg line="-jar ${soycompiler.dir}/SoyToJsSrcCompiler.jar"/>
      <arg line="--outputPathFormat ${templategen.dir}/webpages.js"/>
      <arg line="--shouldProvideRequireSoyNamespaces"/>
      <arg line="--srcs ${soyfiles}"/>
    </exec>
    <copy file="${templategen.dir}/webpages.js" todir="${build.dir}"/>
  </target>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
  </target>

  <target name="build-clean">
    <delete>
      <fileset dir="${templategen.dir}"/>    
    </delete>
  </target>

  <target name="cleansource">
         <fileset id="srcjs" dir="${template.dir}/app/" > 
      <include name ="**/*.js"/>
    </fileset>
    <pathconvert pathsep=" " property="jsfiles" refid="srcjs"/>
    <echo message="${jsfiles}"/>
    <exec dir="${basedir}" executable="perl">
      <arg line="-p -i -e 's/[\t]+/  /g'"/>
      <arg line="${jsfiles}"/>
    </exec>
    <exec dir="${basedir}" executable="perl">
      <arg line="-p -i -e 's/[ \t]+$//g'"/>
      <arg line="${jsfiles}"/>
    </exec>
     <exec dir="${basedir}" executable="perl">
      <arg line="-p -i -e 's/function \(/function(/g'"/>
      <arg line="${jsfiles}"/>
    </exec>
  </target>

  <target name="build-postclean">
    <echo>replacing tabs</echo>
    <exec dir="${basedir}" executable="perl">
      <arg value="-p -i -e 's/\t/ /g'"/>
      <arg value="${templategen.dir}/app.js"/>
      <arg value="${templategen.dir}/index.html"/>
    </exec>
    <echo>replacing EOL Whitespace</echo>
    <exec dir="${basedir}" executable="perl">
      <arg value="-p -i -e 's/[ \t]+$//g'"/>
      <arg value="${templategen.dir}/app.js"/>
      <arg value="${templategen.dir}/index.html"/>
    </exec>
    <echo>replacing redundant line breaks</echo>
    <exec dir="${basedir}" executable="perl">
      <arg value="-p -i -e 's/^\n//'"/>
      <!-- alternate method s/\n\n/\n/smg -->
      <arg value="${templategen.dir}/app.js"/>
      <arg value="${templategen.dir}/index.html"/>
    </exec>
    <echo>replacing redundant spaces in html</echo>
    <exec dir="${basedir}" executable="perl">
      <arg value="-p -i -e 's/ +/ /g'"/>
      <arg value="${templategen.dir}/index.html"/>
    </exec>
    <!--  Other Cleanups
#tidy -m $templategen.dir/index.html;
#probably want to use tidy -qe for quiet and errors.warnings only no markup changes
#gjslint $templategen.dir/app.js;
          -->

</target>

<target name="build-debug-deps">
  <delete>
    <fileset file="${build.dir}/app-deps.js"/>
  </delete>
  <exec dir="${basedir}" executable="python" >
    <arg line="${closure-library.dir}/closure/bin/build/depswriter.py"/>
    <arg line="--root_with_prefix='${build.dir} ../../../app'"/>
    <arg line="--output_file='${build.dir}/app-deps.js'"/>
  </exec>
</target>    

<target name="build" depends="init, build-clean">
  <antcall target="generateTemplates"/>
  <antcall target="build-soy"/>
  <!--antcall target="build-postclean"/ -->
  <antcall target="build-push"/>
</target>
<target name="deploy" depends="init, deploy-clean">
  <antcall target="deploy-push"/>
  <exec dir="${basedir}" executable="perl">
    <arg value="-pi"/>
    <arg value="deploymod.pl"/>
    <arg value="${deploy.dir}/index.html"/>
  </exec>
  <antcall target="deploy-compile"/>
</target>

<target name="deploy-compile">
  <exec executable="python" failonerror="true" logError="true" output="${deploy.dir}/app-compiled.js" >
    <arg value="${closure-library.dir}/closure/bin/build/closurebuilder.py" />
    <arg value='--root=${closure-library.dir}/'/>
    <arg value='--root=${build.dir}/'/>
    <arg line='--namespace="App"'/>
    <arg line='--output_mode=compiled'/>
    <arg line='--compiler_jar=${closurecompiler.dir}/compiler.jar'/>
    <arg line='--compiler_flags="--compilation_level=ADVANCED_OPTIMIZATIONS"'/>
    <arg line='--compiler_flags="--debug"'/>
    <arg line='--compiler_flags="--formatting=pretty_print"'/>
    <arg line='--compiler_flags="--warning_level=verbose"'/>
  </exec>
</target>

<target name="deploy-clean">
  <delete>
    <fileset dir="${deploy.dir}"/>
  </delete>
  <mkdir dir="${deploy.dir}/cgi-bin"/>
  <mkdir dir="${deploy.dir}/images"/>
</target>

<target name="deploy-push" depends="deploy-clean">
  <copy  todir="${deploy.dir}/cgi-bin">
    <fileset dir ="${build.dir}/cgi-bin"/>
  </copy>
  <chmod  perm="755">
    <fileset dir ="${deploy.dir}/cgi-bin/">
      <include name="*.pl"/>
      <include name="*.pm"/>
    </fileset>
  </chmod>
  <copy  todir="${deploy.dir}/images">
    <fileset dir ="${build.dir}/images"/>
  </copy>
  <copy  todir="${deploy.dir}">
    <fileset file="${build.dir}/index.html"/>
  </copy>
</target>
<target name="lint" depends="cleansource, build">
  <exec executable="gjslint" failonerror="true" logError="true">
    <arg value="${build.dir}/app.js" />
  </exec>
</target>

<target name="initialbuild">

<!--
#!/usr/bin/bash
mkdir db
mkdir lib
mkdir template
mkdir template/_gen_
mkdir tempate/_template_
mkdir template/_template_/xHeader/
mkdir build
mkdir build/app/
mkdir build/app/cgi-bin
mkdir build/app/images
svn checkout http://closure-library.googlecode.com/svn/trunk/ build/closure-library

mkdir deploy
echo You Need to copy into template:  1.DBGen_Util.pm 2.generateTemplates.pl 3.include.properties
echo "you need to adjust grants on symlink, but this will adjust the target dir: sudo chown www-data *; sudo chgrp www-data *;sudo chmod 644 *"
echo "you need to copy proj-root executables and config files"
echo "you need to copy build/app/cgi-bin/ files"
echo "you need to look at otherconfig.txt"
sudo ln -s /home/wbmartin/www/ledger/build /var/www/ledger-build
sudo ln -s /home/wbmartin/www/ledger /var/www/ledger
echo "closure-library/" > build/.gitignore

update /etc/apache2/sites-available
then restart apache: sudo /etc/init.d/apache2 restart
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
ScriptAlias /ledger/cgi-bin/ /home/wbmartin/www/ledger/deploy/cgi-bin/
  <Directory "/home/wbmartin/www/ledger/deploy/cgi-bin">
            AllowOverride None
            Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
            Order allow,deny
            Allow from all
   </Directory>

ScriptAlias /ledger-build/app/cgi-bin/ /home/wbmartin/www/ledger/build/app/cgi-bin/
  <Directory "/home/wbmartin/www/ledger/build/app/cgi-bin">
              AllowOverride None
              Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
              Order allow,deny
              Allow from all
  </Directory>

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
     -->
</target>

<target name="resources">
<echo message="http://blog.blazingcloud.net/2012/03/09/manipulating-the-dom-google-closure-vs-jquery/"/>
<echo message="https://developers.google.com/closure/compiler/docs/js-for-compiler"/>
<echo message="https://developers.google.com/closure/library/docs/tutorial"/>
<echo message="http://www.codeproject.com/Articles/265364/First-Adventures-in-Google-Closure"/>
<echo message="http://closure-library.googlecode.com/svn/trunk/closure/goog/demos/index.html"/>
<echo message=""/>
<echo message=""/>
</target>

<!--example: ant MakePageShell -Dpage='test'-->
<target name="MakePageShell">
  <echo message="Creating page shell: ${page}"/>
  <property name="pageshelldir" value="${template.dir}/app/${page}"/>
  <mkdir dir="${pageshelldir}"/>
  <touch file="${pageshelldir}/_${page}Web.html"/>
  <touch file="${pageshelldir}/_${page}Web.js"/>
  <touch file="${pageshelldir}/_${page}Mobile.html"/>
  <touch file="${pageshelldir}/_${page}Mobile.js"/>
  <touch file="${pageshelldir}/_${page}Common.js"/>
  <touch file="${pageshelldir}/_${page}Common.html"/>
</target>

</project>
